Database ideas
---------------
1. Arrays as tables.
2. Work flows (Stored Procedures) can be deployed as Spark/Flink jobs.
3. database + kafka(streaming) - easy to get data in and out (json, csv, avro, parquet, orc)

Chimera

Incoming Features
-----------------
1. add isExternal flag to FieldMetadata for BLOBs & Arrays - TINY -> DONE
2. remove data type information from field metadata - SMALL/MEDIUM -> DONE
3. GET/PUT/DELETE images (or columns) - MEDIUM -> DONE
    a. GET - SMALL
    b. PUT - SMALL
    c. DELETE - TINY
4. BLOBs in separate file [columnar] - MEDIUM -> DONE
5. indexed fields vs payload (event sourcing) - MEDIUM
6. allocatable blocks for TEXT string types (all variable sized types) - MEDIUM/LARGE
7. COMPRESS/DECOMPRESS columns - SMALL -> DONE
8. Persistent collections should use the database table structure instead of individual files - MEDIUM -> DONE
9. Circular tables - MEDIUM
10. implement: TableFile.onRowUpdate { (row:  BinaryRow) => ... } | onDelete/onInsert - MEDIUM
11. To support large gaps in RIDs, we could use offset translation to localized offsets/files like partition device (hashmap)


