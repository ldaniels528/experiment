Database ideas
---------------
1. Arrays as tables.
2. Work flows (Stored Procedures) can be deployed as Spark/Flink jobs.
3. database + kafka(streaming) - easy to get data in and out (json, csv, avro, parquet, orc)

Chimera

Incoming Features
-----------------
1. BLOBs in separate file; allocatable blocks for BLOBs, TEXT string types (all variable sized types) - LARGE
2. Circular tables - SMALL
3. implement: onDelete/onInsert/onRowUpdate - SMALL
    TableFile.onRowUpdate { (row:  BinaryRow) => ... }
4. Add support for Arrays - MEDIUM
    a. SELECT value FROM STRING_SPLIT('Roberto,Gail,Dylan', ',');
    b. SELECT Array(1, 2, 3) AS numbers;
    c. SELECT Array("apple", "pear", "orange") AS fruit;
    d. SELECT Array(true, false, true) AS booleans;
5. Add support for tables as variables - MEDIUM
    DECLARE @myTableVariable TABLE (id INT, name varchar(20))
    INSERT INTO @myTableVariable VALUES(1,'Roberto'),(2,'Gail'),(3,'Dylan')
    SELECT * FROM @myTableVariable
6. Add support for rowNumber() function - SMALL
    SELECT count FROM 'public'.'stocks' WHERE rowNumber() BETWEEN 1 AND 100;
    UPDATE 'public'.'stocks' SET count = 1200 WHERE rowNumber() = 100;
    UPDATE 'public'.'stocks' SET comments = 'N/A' WHERE rowNumber() BETWEEN 0 AND 25;
7. Support CREATE TABLE state_reports LIKE reports - TINY

Completed Features
------------------
1. add isExternal flag to FieldMetadata for BLOBs & Arrays - TINY
2. remove data type information from field metadata - SMALL
3. GET/PUT/DELETE images (or columns) - MEDIUM
    a. GET - SMALL
    b. PUT - SMALL
    c. DELETE - TINY
4. COMPRESS/DECOMPRESS columns - SMALL
5. Persistent collections should use the database table structure instead of individual files - SMALL
